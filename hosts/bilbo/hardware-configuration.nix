# Do not modify this file!  It was generated by ‘nixos-generate-config’
# and may be overwritten by future invocations.  Please make changes
# to /etc/nixos/configuration.nix instead.
{ config, lib, pkgs, modulesPath, ... }:

{
  imports =
    [ (modulesPath + "/installer/scan/not-detected.nix")
    ];

  boot.initrd.availableKernelModules = [ "xhci_pci" "nvme" "sdhci_pci" ];
  boot.initrd.kernelModules = [ ];
  boot.kernelModules = [ "kvm-intel" ];
  boot.extraModulePackages = [ ];

  fileSystems."/" =
    {
      device = "/dev/disk/by-uuid/a3200397-db01-419a-a374-bf376121ab17";
      fsType = "xfs";
    };

  boot.initrd.luks.devices."cryptroot" = {
    device = "/dev/disk/by-uuid/c6906829-a4c9-410a-8d8b-cee2cc025fd2";
    allowDiscards = true;
  };

  fileSystems."/data" = {
    device = "/dev/disk/by-uuid/887689b3-f32a-40ad-80fa-7b582c3a470f";
    fsType = "xfs";
  };

  fileSystems."/efi" = {
    device = "/dev/disk/by-uuid/F9F8-CC38";
    fsType = "vfat";
  };

  swapDevices = [
    { device = "/dev/disk/by-uuid/8d4d848c-6f47-45ce-9fcd-081e6c0da54f"; }
  ];

  # Enables DHCP on each ethernet and wireless interface. In case of scripted networking
  # (the default) this is the recommended approach. When using systemd-networkd it's
  # still possible to use this option, but it's recommended to use it in conjunction
  # with explicit per-interface declarations with `networking.interfaces.<interface>.useDHCP`.
  networking.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp0s31f6.useDHCP = lib.mkDefault true;
  # networking.interfaces.enp44s0u1u1u1.useDHCP = lib.mkDefault true;
  # networking.interfaces.nm-bridge.useDHCP = lib.mkDefault true;
  # networking.interfaces.wlp82s0.useDHCP = lib.mkDefault true;

  nixpkgs.hostPlatform = lib.mkDefault "x86_64-linux";
  hardware.cpu.intel.updateMicrocode = lib.mkDefault config.hardware.enableRedistributableFirmware;
}
